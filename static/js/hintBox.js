// Generated by CoffeeScript 1.6.2
(function() {
  var Hint, HintBox,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Hint = (function(_super) {
    __extends(Hint, _super);

    function Hint() {
      Hint.__super__.constructor.call(this, App.templates["hint"]);
    }

    Hint.prototype.show = function(text, type) {
      this.UI.content.innerHTML = text;
      this.node.style.display = "none";
      if (type === "Error") {
        this.UI.type.innerHTML = "惊";
        this.UI.type.style.color = "#c00";
      } else {
        this.UI.type.style.color = "white";
        this.UI.type.style.backgroundColor = "none";
        this.UI.type.innerHTML = "注";
      }
      return this.$node.slideDown();
    };

    Hint.prototype.hide = function() {
      var _this = this;

      return this.$node.slideUp(function() {
        return _this.remove();
      });
    };

    return Hint;

  })(Leaf.Widget);

  HintBox = (function(_super) {
    __extends(HintBox, _super);

    function HintBox() {
      HintBox.__super__.constructor.call(this, App.templates["hint-box"]);
    }

    HintBox.prototype.show = function(text, type) {
      var hint;

      hint = new Hint();
      hint.prependTo(this);
      hint.show(text, type);
      return setTimeout(function() {
        return hint.hide();
      }, 8000);
    };

    return HintBox;

  })(Leaf.Widget);

  window.HintBox = HintBox;

}).call(this);

/*
//@ sourceMappingURL=hintBox.map
*/
